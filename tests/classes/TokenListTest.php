<?php

require_once dirname(dirname(__FILE__)) . '/bootstrap.php';

/**
 * Test class for TokenList.
 * Generated by PHPUnit on 2012-01-23 at 20:09:33.
 */
class TokenListTest extends PHPUnit_Framework_TestCase
{

    /**
     * @var TokenList
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new TokenList;
    }

    private function getTokenMock()
    {
        return $this->getMockBuilder('Token')
            ->disableOriginalConstructor()
            ->getMock();
    }
    /**
     * testPushToken().
     */
    public function testPushToken()
    {
        $tokenMock = $this->getTokenMock();
        $this->assertFalse($this->object->offsetExists(0));
        
        $this->object->pushToken($tokenMock);
        $this->assertTrue($this->object->offsetExists(0));
        $this->assertEquals($tokenMock, $this->object->offsetGet(0));
    }

    /**
     * testInjectToken().
     */
    public function testInjectToken()
    {
        $tokenMock = $this->getTokenMock();
        $this->assertFalse($this->object->offsetExists(0));
        $this->object->pushToken($tokenMock);
        
        $tokenMock2 = $this->getTokenMock();
        $this->object->injectToken($tokenMock2, 0);
        
        $this->assertEquals($tokenMock2, $this->object->offsetGet(0));
        $this->assertEquals($tokenMock, $this->object->offsetGet(1));
    }

    /**
     * 
     */
    public function testGetNextNonWhitespace1()
    {
        $token = new StringToken('T_STRING', 'my', 1);
        $this->object->pushToken($token);
        $w = new PHPToken('T_WHITESPACE', "whitespace", 1);
        $this->object->pushToken($w);
        $string = new StringToken('T_STRING', "needle", 1);
        $this->object->pushToken($string);
        
        $res = $this->object->getNextNonWhitespace($token);
        $this->assertEquals($string, $res);
    }
    
    /**
     */
    public function testGetNextNonWhitespaceNull()
    {
        $token = new StringToken('T_STRING', 'my', 1);
        $this->object->pushToken($token);
        $w = new NewLineToken('T_NEWLINE', PHP_EOL, 1);
        $this->object->pushToken($w);
        $string = new StringToken('T_STRING', "needle", 1);
        $this->object->pushToken($string);
        
        $res = $this->object->getNextNonWhitespace($token);
        $this->assertNull($res);
    }


    public function testIsTokenIncluded()
    {
        $token = new StringToken('T_STRING', 'my', 1);
        $res = $this->object->isTokenIncluded(array($token), array('T_STRING'));
        $this->assertTrue($res);
    }
    
    public function testTokenIsNotIncluded()
    {
        $token = new StringToken('T_STRING', 'my', 1);
        $res = $this->object->isTokenIncluded(array($token), array('T_ASSIGN'));
        $this->assertFalse($res);
    }
}

