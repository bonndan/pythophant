<?php

require_once dirname(dirname(__FILE__)) . '/bootstrap.php';

/**
 * Test class for Parser.
 * Generated by PHPUnit on 2012-01-21 at 18:29:24.
 */
class PythoPhant_ConverterTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var PythoPhant_Converter 
     */
    private $converter;
    private $scanner;
    private $parser;
    private $renderer;
    
    public function setup()
    {
        parent::setUp();
        $this->scanner = $this->getMockBuilder('PythoPhant_Scanner')->disableOriginalConstructor()->getMock();
        $this->parser = $this->getMockBuilder('PythoPhant_Parser')->disableOriginalConstructor()->getMock();
        $this->renderer = $this->getMock('PythoPhant_Renderer');
        $this->converter = new PythoPhant_Converter($this->scanner, $this->parser, $this->renderer);
    }
    
    public function testInjection()
    {
        $this->assertAttributeEquals($this->scanner, 'scanner', $this->converter);
        $this->assertAttributeEquals($this->parser, 'parser', $this->converter);
        $this->assertAttributeEquals($this->renderer, 'renderer', $this->converter);
    }
    
    public function testConvert()
    {
        $source = $this->getMockBuilder('PythoPhant_SourceFile')->disableOriginalConstructor()->getMock();
        $this->scanner->expects($this->once())->method('scanSource');
        $this->scanner->expects($this->once())
            ->method('getTokenList')
            ->will($this->returnValue($this->getMock('TokenList')));
        $this->parser->expects($this->once())->method('processTokenList');
        $this->renderer->expects($this->once())->method('enableDebugging');
        $this->renderer->expects($this->once())->method('setTokenList');
        $this->renderer->expects($this->once())->method('addWaterMark');
        $this->renderer->expects($this->once())->method('getPHPSource');
        $source->expects($this->once())->method('writeTarget');
        
        $this->converter->convert($source);
    }
    
    public function testUpdate()
    {
        $mock = $this->getMockBuilder('PythoPhant_Event_FileChanged')->disableOriginalConstructor()->getMock();
        $mock->expects($this->once())->method('getPath');
        
        $this->setExpectedException('PythoPhant_Exception');
        $this->converter->update($mock);
    }
}