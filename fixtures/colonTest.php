<?php
/**
 * 
 * 
 * @ppWatermark generated by PythoPhant on 2012/05/23 21:40:55 from colonTest. #45b0a64eb7569eaa45d8cc04f9361157
 */
class ColonTest
{
    /**
     * @var string 
     */
    private $aVar;

    /**
     * myFunction
     * 
     * @param Countable aCountable
     * @param mixed myVar = ''
     * 
     * @return int
     */
    public function myFunction(Countable $aCountable, $myVar = '')
    {
        unset($myVar);
        $aCountable->count();
        return int_val(count($aCountable));
    }

    /**
     * @param string aVar
     * @param int    bv 
     */
    private function setVar($aVar, $bv)
    {
        if (! is_int($bv)) {
            throw new InvalidArgumentException("bv is not of type int") ;
        }
        //
        if (! is_string($aVar)) {
            throw new InvalidArgumentException("aVar is not of type string") ;
        }
        //
        $this->aVar = $aVar;
    }

    /**
     * a function
     * @return string 
     */
    public function aFunc()
    {
        $myVar = 1;
        if ($this->aVar == NULL) {
            $this->setVar(new SomeClass($myVar . "someConstructorArg", 1));
        }
        return ucfirst(str_replace('a', 'b', 'tesT'));
    }

    /**
     * a test
     * 
     * @param array data = null 
     */
    private function aTest(array $data = null)
    {
        if ( !empty($data)) {
            $this->aFunc();
        }
        if ( !is_array($data)) {
            $this->aFunc();
        }
        if ( is_readable(someVar) and  is_callable(someVar)) {
            $this->aFunc();

        }
        foreach ($data as $akey => $val) {
            $somearray[] = array($akey => strlen($val));
            echo $key . PHP_EOL;
        }
    }

}

